{"ast":null,"code":"import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize); // Manual definition of state and output arguments\n\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","map":{"version":3,"names":["defaultMemoize","defaultEqualityCheck","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","arguments","length","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_recomputations","_lastResult","directlyPassedOptions","memoizeOptions","undefined","resultFunc","pop","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","apply","recomputationWrapper","concat","selector","dependenciesChecker","params","i","push","Object","assign","lastResult","recomputations","resetRecomputations","createStructuredSelector","selectors","selectorCreator","objectKeys","keys","resultSelector","key","_len3","values","_key3","reduce","composition","value","index"],"sources":["/workspaces/Inventory-system/inventory/node_modules/reselect/es/index.js"],"sourcesContent":["import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}