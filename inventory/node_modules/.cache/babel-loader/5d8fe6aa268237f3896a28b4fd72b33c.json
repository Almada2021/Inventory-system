{"ast":null,"code":"var _jsxFileName = \"/workspaces/Inventory-system/inventory/src/components/ConditionalList/ConditionalList.js\";\nimport { ListContainer } from \"../ListContainer/ListContainer\";\nimport Product from \"../Product/Product\";\nimport WrongList from \"../WrongList/WrongList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ConditionalList(_ref) {\n  let {\n    items,\n    isLoading,\n    canLoad,\n    error\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: canLoad ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ListContainer, {\n        length: items === null || items === void 0 ? void 0 : items.length,\n        children: items.map(product => /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(WrongList, {\n      isLoading: isLoading,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = ConditionalList;\nexport default ConditionalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionalList\");","map":{"version":3,"names":["ListContainer","Product","WrongList","ConditionalList","items","isLoading","canLoad","error","length","map","product","id"],"sources":["/workspaces/Inventory-system/inventory/src/components/ConditionalList/ConditionalList.js"],"sourcesContent":["import { ListContainer } from \"../ListContainer/ListContainer\"\nimport Product from \"../Product/Product\"\nimport WrongList from \"../WrongList/WrongList\"\n\nfunction ConditionalList({items, isLoading, canLoad, error}) {\n  return (\n    <>\n       {\n        canLoad\n        ? \n          <> \n            <ListContainer length={items?.length}>\n                {\n                  items.map(product => (\n                    <Product key={product.id} product={product} />\n                    ))\n                }\n            </ListContainer>\n          </>\n        :\n        <WrongList isLoading={isLoading} error={error}></WrongList>\n      } \n    </>\n  )\n}\n\nexport default ConditionalList"],"mappings":";AAAA,SAASA,aAAT,QAA8B,gCAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAEA,SAASC,eAAT,OAA6D;EAAA,IAApC;IAACC,KAAD;IAAQC,SAAR;IAAmBC,OAAnB;IAA4BC;EAA5B,CAAoC;EAC3D,oBACE;IAAA,UAEID,OAAO,gBAEL;MAAA,uBACE,QAAC,aAAD;QAAe,MAAM,EAAEF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEI,MAA9B;QAAA,UAEMJ,KAAK,CAACK,GAAN,CAAUC,OAAO,iBACf,QAAC,OAAD;UAA0B,OAAO,EAAEA;QAAnC,GAAcA,OAAO,CAACC,EAAtB;UAAA;UAAA;UAAA;QAAA,QADF;MAFN;QAAA;QAAA;QAAA;MAAA;IADF,iBAFK,gBAYP,QAAC,SAAD;MAAW,SAAS,EAAEN,SAAtB;MAAiC,KAAK,EAAEE;IAAxC;MAAA;MAAA;MAAA;IAAA;EAdJ,iBADF;AAmBD;;KApBQJ,e;AAsBT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}